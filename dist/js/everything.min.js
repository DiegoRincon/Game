var gameLogic;!function(a){function b(){for(var b=[],c=0;c<a.ROWS;c++){b[c]=[];for(var d=0;d<a.COLS;d++)b[c][d]=-1}return b}function c(){var a=[],c=[],d=b();return{board:d,delta:null,hasPassed:!1,whiteScore:0,blackScore:0,whiteStones:a,blackStones:c,previousBoard:d}}function d(b,c,d,e,f){var g=angular.copy(b);g[c][d]=e==a.WHITE?a.BLACK:a.WHITE;var h=e==a.WHITE?f.whiteStones:f.blackStones,i=k(g,e,h);if(i.length>0)return!1;for(var j=-1;2>j;j++)for(var l=-1;2>l;l++)if(Math.abs(j)!==Math.abs(l)&&!(0>c+j||0>d+l||c+j>=a.ROWS||d+l>=a.COLS||b[c+j][d+l]===e))return!1;return!0}function e(a,b,c,e){var f=a.board;if(-1!==f[b][c])throw new Error("One can only make a move in an empty position!");var g=1===e?0:1;if(d(f,b,c,g,a))throw new Error("You cannot make a suicide move");return!0}function f(b,d,f,g){b||(b=c());var h,i=b.board;if(-1===d&&-1===f){h=b.hasPassed?!0:!1;var k={row:d,col:f};return j(i,h,g,b,k,-1)}if(-1===d&&0===f){var l={row:d,col:f};return j(i,!0,g,b,l,a.BLACK)}if(0===d&&-1===f){var m={row:d,col:f};return j(i,!0,g,b,m,a.WHITE)}if(!e(b,d,f,g))throw Error("Not a legal move!");var n=angular.copy(i);n[d][f]=g;var o={row:d,col:f};return j(n,h,g,b,o,-1)}function g(a,b){return null===a||null===b?!0:angular.equals(a,b)?!1:!0}function h(a,b){if(a)for(var c=0;c<a.length;c++){var d=a[c];b[d.row][d.col]=-1}}function i(a,b){if(a)for(var c=0;c<a.length;c++)for(var d=0;d<b.length;d++){var e=a[c];angular.equals(e,b[d])&&b.splice(d,1)}}function j(b,c,d,e,f,j){var l=e.whiteScore,m=e.blackScore,q=!1;-1===f.row&&-1===f.col&&(q=!0);var r=angular.copy(e.whiteStones),s=angular.copy(e.blackStones);if(q||(r=d===a.WHITE?r.concat({row:f.row,col:f.col}):r,s=d===a.BLACK?s.concat({row:f.row,col:f.col}):s),q||d!==a.WHITE){if(!q){var t=k(b,a.WHITE,e.whiteStones);h(t,b),i(t,r);var u=t?t.length:0;m=e.blackScore+u}}else{var t=k(b,a.BLACK,e.blackStones);h(t,b),i(t,s);var u=t?t.length:0;l=e.whiteScore+u}if(q)l=e.whiteScore,m=e.blackScore;else if(!g(b,e.previousBoard))throw Error("Cannot go back to a previous board!");var v,w;if(c)if(j===a.BLACK)v=[0,1],b=n(b),w=-1;else if(j===a.WHITE)v=[1,0],b=n(b),w=-1;else{var x=o(b,r.length),y=p(b,s.length);v=[y,x],b=n(b),w=-1}else v=null,w=d==a.WHITE?a.BLACK:a.WHITE;var z={delta:f,board:b,hasPassed:q,whiteScore:l,blackScore:m,whiteStones:r,blackStones:s,previousBoard:e.board};return{endMatchScores:v,turnIndexAfterMove:w,stateAfterMove:z}}function k(a,b,c){for(var d=[],e=[],f=l(e,a,c,b);f&&0!==f.length;)s(f,a)?(e=e.concat(f),f=l(e,a,c,b)):(d=d.concat(f),e=e.concat(f),f=l(e,a,c,b));return d}function l(a,b,c,d){for(var e=0;e<c.length;e++){var f=c[e];if(!t(f,a)){var g=[];return q(f,b,d,g)}}return null}function m(b,c){for(var d=[],e=[],f=0,g=0;g<a.ROWS;g++)for(var h=0;h<a.COLS;h++)if(-1===b[g][h]){var i={row:g,col:h};if(!t(i,d)){var j=[];q(i,b,-1,j),r(c,j,b)&&(f+=j.length,e=e.concat(j)),d=d.concat(j)}}return e}function n(b){for(var c=m(b,a.WHITE),d=m(b,a.BLACK),e=angular.copy(b),f=0;f<c.length;f++){var g=c[f];e[g.row][g.col]=a.WHITETERR}for(var f=0;f<d.length;f++){var g=d[f];e[g.row][g.col]=a.BLACKTERR}return e}function o(b,c){return m(b,a.WHITE).length+c}function p(b,c){return m(b,a.BLACK).length+c}function q(b,c,d,e){e.push(b);for(var f=b.row,g=b.col,h=-1;2>h;h++)for(var i=-1;2>i;i++)if(Math.abs(h)!==Math.abs(i)&&!(0>f+h||0>g+i||f+h>=a.ROWS||g+i>=a.COLS||c[f+h][g+i]!==d)){var j={row:f+h,col:g+i};if(t(j,e))continue;q(j,c,d,e)}return e}function r(b,c,d){for(var e=0;e<c.length;e++)for(var f=c[e],g=f.row,h=f.col,i=-1;2>i;i++)for(var j=-1;2>j;j++)if(Math.abs(i)!==Math.abs(j)){var k=g+i,l=h+j;if(!(0>k||0>l||k>=a.ROWS||l>=a.COLS||-1===d[k][l]||d[k][l]===b))return!1}return!0}function s(b,c){for(var d=0;d<b.length;d++)for(var e=b[d],f=e.row,g=e.col,h=-1;2>h;h++)for(var i=-1;2>i;i++)if(Math.abs(h)!==Math.abs(i)){var j=f+h,k=g+i;if(!(0>j||0>k||j>=a.ROWS||k>=a.COLS||-1!==c[j][k]))return!0}return!1}function t(a,b){if(!b)return!1;for(var c=0;c<b.length;c++){var d=b[c];if(angular.equals(d,a))return!0}return!1}function u(a){var b=a.turnIndexBeforeMove,c=a.stateBeforeMove,d=a.move,e=a.move.stateAfterMove.delta,g=e.row,h=e.col,i=f(c,g,h,b);if(!angular.equals(d,i))throw new Error("Expected move="+angular.toJson(d,!0)+", but got move="+angular.toJson(i,!0))}function v(){var b=a.createMove(null,0,0,0);log.log("move=",b);var c={turnIndexBeforeMove:0,stateBeforeMove:null,move:b,numberOfPlayers:2};a.checkMoveOk(c)}a.ROWS=13,a.COLS=13,a.BLACK=0,a.WHITE=1,a.BLACKTERR=2,a.WHITETERR=3,a.getInitialState=c,a.isLegalMove=e,a.createMove=f,a.getWhiteTerritory=o,a.getBlackTerritory=p,a.checkMoveOk=u,a.forSimpleTestHtml=v}(gameLogic||(gameLogic={}));var game;!function(a){function b(){translate.setTranslations(j()),translate.setLanguage("en"),log.log("Translation of 'RULES_OF_GO' is "+translate("RULES_OF_GO")),resizeGameAreaService.setWidthToHeight(1),moveService.setGame({minNumberOfPlayers:2,maxNumberOfPlayers:2,checkMoveOk:gameLogic.checkMoveOk,updateUI:n}),document.addEventListener("animationend",k,!1),document.addEventListener("webkitAnimationEnd",k,!1),document.addEventListener("oanimationend",k,!1),setTimeout(k,1e3);var a=window;a.HTMLInspector&&setInterval(function(){a.HTMLInspector.inspect({excludeRules:["unused-classes","script-placement"]})},3e3)}function c(){return i()>h()?"Black":"White"}function d(){return a.state.whiteScore}function e(){return a.state.blackScore}function f(){return-1!==a.move.turnIndexAfterMove}function g(){return-1===a.move.turnIndexAfterMove}function h(){return a.move.endMatchScores[gameLogic.WHITE]+(a.hasKomi?a.KOMI:0)}function i(){return a.move.endMatchScores[gameLogic.BLACK]}function j(){return{RULES_OF_GO:{en:"Rules of Go",es:"חוקי המשחק"},RULES_SLIDE1:{en:"Black makes the first move, after which White and Black alternate. You can only place one stone per turn. A player can pass their turn at any time.",es:"Negro juega primero; después ambos jugadores juegan alternadamente. Solamente se permite poner una piedra por turno. Un jugador puede pasar su turno en cualquier momento."},RULES_SLIDE2:{en:"A stone or solidly connected group of stones of one color is captured and removed from the board when all the intersections directly adjacent to it are occupied by the enemy.",es:"Una piedra o un grupo de piedras connectadas de un color son capturadas y removidas del tabero cuando todas as intersecciones directamente adjacentes son ocupadas por piedras enemigas."},RULES_SLIDE3:{en:"No stone may be played so as to recreate a former board state. Two consecutive passes end the game.",es:"Ninguna piedra puede ser jugada de tal manera que repita un previo tablero. Cuando los dos jugadores pasan su turno el juego termina."},RULES_SLIDE4:{en:"A player's territory consists of all the points the player has either occupied or surrounded. The player with more territory wins the game. If Komi option is selected, White will be awarded bonus points (6.5 for 19x19; 7.5 for 13x13; and 8.5 for 9x9))",es:"El territorio de un jugador consiste en todos los puntos que esten ocupados o rodeados. El jugador con más territorio gana el juego. Si la opcion Komi es elegida, Blanco obtendra un bono de puntos (6.5 para 19x19; 7.5 para 13x13; 8.5 para 9x9))"},CLOSE:{en:"Close",es:"Cerrar"}}}function k(){a.animationEnded||$rootScope.$apply(function(){log.info("Animation ended"),a.animationEnded=!0,l()})}function l(){if(a.isComputerTurn){a.isComputerTurn=!1;for(var b=aiService.randomMove(a.move.stateAfterMove.board),c=m(b);!c;)b=aiService.randomMove(a.move.stateAfterMove.board),c=m(b);moveService.makeMove(c)}}function m(b){try{var c=gameLogic.createMove(a.state,b.row,b.col,a.move.turnIndexAfterMove);return c}catch(d){return null}}function n(b){log.info("Game got updateUI:",b),a.animationEnded=!1,a.move=b.move,a.state=a.move.stateAfterMove,a.state||(a.state=gameLogic.getInitialState()),a.canMakeMove=a.move.turnIndexAfterMove>=0&&b.yourPlayerIndex===a.move.turnIndexAfterMove,a.isComputerTurn=a.canMakeMove&&""===b.playersInfo[b.yourPlayerIndex].playerId,a.isComputerTurn&&(a.canMakeMove=!1,a.state.delta||l())}function o(a){for(var b=[],c=0;a>c;c++)b.push(c);return b}function p(b,c){if(log.info("Clicked on cell:",b,c),"?throwException"===window.location.search)throw new Error("Throwing the error because URL has '?throwException'");if(a.canMakeMove)try{var d=gameLogic.createMove(a.state,b,c,a.move.turnIndexAfterMove);a.canMakeMove=!1,moveService.makeMove(d)}catch(e){return void log.info(["That was an illegal move:",b,c])}}function q(b,c){var d=a.state.board[b][c];return-1!==d}function r(){return a.move.turnIndexAfterMove===gameLogic.BLACK?"Black":"White"}function s(){return a.boardSizeSet}function t(b){if(13!==b&&19!==b&&9!==b)throw Error("Invalid board size");gameLogic.ROWS=b,gameLogic.COLS=b,a.state=gameLogic.getInitialState(),a.boardSize=b,a.KOMI=19===a.boardSize?6.5:13===a.boardSize?7.5:8.5,a.boardSizeSet=!0}function u(a){if("Black"===a)return p(-1,0);if("White"===a)return p(0,-1);throw Error("Resign function didn't get a valid parameter")}function v(){b(),document.getElementById("boardSize").style.display="block",document.getElementById("container").style.display="none"}function w(b,c){return a.state.board[b][c]===gameLogic.WHITE}function x(b,c){return a.state.board[b][c]===gameLogic.BLACK}function y(b,c){return a.state.board[b][c]===gameLogic.WHITETERR}function z(b,c){return a.state.board[b][c]===gameLogic.BLACKTERR}function A(b,c){return!a.animationEnded&&a.state.delta&&a.state.delta.row===b&&a.state.delta.col===c}function B(b){return b.target===b.currentTarget&&(b.preventDefault(),b.stopPropagation(),a.isHelpModalShown=!1),!0}a.animationEnded=!1,a.canMakeMove=!1,a.isComputerTurn=!1,a.move=null,a.state=null,a.isHelpModalShown=!1,a.boardSize=13,a.boardSizeSet=!1,a.hasKomi=!1,a.KOMI=6.5,a.init=b,a.getWinner=c,a.getWhiteScore=d,a.getBlackScore=e,a.isGameOngoing=f,a.isGameOver=g,a.getFinalWhiteScore=h,a.getFinalBlackScore=i,a.getNumber=o,a.cellClicked=p,a.shouldShowImage=q,a.getTurn=r,a.isBoardSizeSet=s,a.setBoardSize=t,a.resign=u,a.restartGame=v,a.isPieceWhite=w,a.isPieceBlack=x,a.isPieceWhiteTerritory=y,a.isPieceBlackTerritory=z,a.shouldSlowlyAppear=A,a.clickedOnModal=B}(game||(game={})),angular.module("myApp",["ngTouch","ui.bootstrap","gameServices"]).run(function(){$rootScope.game=game,game.init()});var aiService;!function(a){function b(a){for(var b=Math.floor(Math.random()*gameLogic.ROWS),c=Math.floor(Math.random()*gameLogic.COLS);-1!==a[b][c];)b=Math.floor(Math.random()*gameLogic.ROWS),c=Math.floor(Math.random()*gameLogic.COLS);return{row:b,col:c}}function c(a){}function d(a,b){for(var c=[],d=0;d<gameLogic.ROWS;d++)for(var e=0;e<gameLogic.COLS;e++)try{c.push(gameLogic.createMove(a,d,e,b))}catch(f){}return c}function e(a,b){return alphaBetaService.alphaBetaDecision(a,a.turnIndexAfterMove,g,f,null,b)}function f(a,b){var c=a.endMatchScores;return c?c[0]>c[1]?Number.POSITIVE_INFINITY:c[0]<c[1]?Number.NEGATIVE_INFINITY:0:0}function g(a,b){return d(a.stateAfterMove,b)}a.randomMove=b,a.findComputerMove=c,a.getPossibleMoves=d,a.createComputerMove=e}(aiService||(aiService={}));
//# sourceMappingURL=everything.min.js.map